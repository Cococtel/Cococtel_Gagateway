type Liquor {
    _id: ID!
    name: String!
    EAN: Int!
    category: String!
    description: String!
    additional_attributes: String!
}

type Ingredient {
    _id: ID!
    name: String!
    quantity: String!
}

type Rating {
    user_id: ID!
    rating: Float!
}

type Recipe {
    _id: ID!
    name: String!
    category: String!
    ingredients: [Ingredient!]!
    instructions: [String!]!
    creatorId: ID!
    rating: Float!
    likes: Int!
    liquors: [String!]!
    createdAt: String!
    ratings: [Rating!]!
    description: String!
    averageRating: Float!
}

type RecipeResponse {
    data: Recipe
    error: Error
}

type RecipesResponse {
    data: [Recipe!]
    error: Error
}

type User {
    user_id: ID!
    name: String!
    lastname: String!
    email: String!
    phone: String!
    image: String!
    username: String!
}

type SuccessfulLogin {
    user_id: ID!
    name: String!
    double_auth: Boolean!
    expiration: String!
    token: String!
    account_type: String!
}

type AIRecipe {
    cocktailName: String!
    ingredients: [Ingredient!]!
    steps: [String!]!
    observations: String!
}

type Product {
    name: String!
    photo_link: String!
    description: String!
    additional_attributes: String!
    isbn: String!
}

type Interaction {
    type: Int!
    value: String!
    userId: String!
    createdAt: String!
}

type Post {
    _id: ID!
    urlImage: String!
    title: String!
    content: String!
    author: String!
    createdAt: String!
    interactions: [Interaction!]!
}

type Error {
    message: String!
    status: Int!
}

type DeleteLiquorResponse {
    data: String
    error: Error
}

type DeleteRecipeResponse {
    data: String
    error: Error
}

type DeletePostResponse {
    data: String
    error: Error
}

type LiquorResponse {
    data: Liquor
    error: Error
}

type LiquorsResponse {
    data: [Liquor!]
    error: Error
}

type UserResponse {
    data: User
    error: Error
}

type LoginResponse {
    data: SuccessfulLogin
    error: Error
}

type VerifyResponse {
    data: String
    error: Error
}

type StringProcessResponse {
    data: String
    error: Error
}

type AIRecipeResponse {
    data: AIRecipe
    error: Error
}

type ProductResponse {
    data: Product
    error: Error
}

type PostResponse {
    data: Post
    error: Error
}

type PostsResponse {
    data: [Post!]
    error: Error
}

input UserInput {
    name: String
    lastname: String
    phone: String
    email: String
    username: String
    image: String
}

type EditProfileResponse {
    data: String
    error: Error
}

type ImageTextResponse {
    data: [String!]
    error: Error
}

input IngredientInput {
    name: String!
    quantity: String!
}

type Query {
    liquors: LiquorsResponse
    liquor(_id: ID!): LiquorResponse

    recipes: RecipesResponse
    recipe(_id: ID!): RecipeResponse

    verify(token: String!): VerifyResponse

    getProductByCode(code: String!): ProductResponse

    getUser(id: String!, token: String!): UserResponse

    posts: PostsResponse
    post(_id: ID!): PostResponse
}

type Mutation {
    createLiquor(name: String!, EAN: Int!, category: String!, description: String!, additional_attributes: String!): LiquorResponse
    updateLiquor(_id: ID!, name: String, EAN: Int, category: String, description: String, additional_attributes: String): LiquorResponse
    deleteLiquor(_id: ID!): DeleteLiquorResponse

    createRecipe(name: String!, category: String!, ingredients: [IngredientInput!]!, instructions: [String!]!, creatorId: ID!, description: String!): RecipeResponse
    updateRecipe(_id: ID!, name: String, category: String, ingredients: [IngredientInput!], instructions: [String!], description: String): RecipeResponse
    deleteRecipe(_id: ID!): Boolean

    register(name: String!, lastname: String, phone: String, email: String!, image: String, username: String, password: String!, type: String): UserResponse
    login(user: String!, password: String!, type: String): LoginResponse
    editProfile(user: UserInput, token: String!): EditProfileResponse

    processStrings(input: [String!]!): StringProcessResponse
    createAIRecipe(liquor: String!): AIRecipeResponse
    extractTextFromImageBytes(imageBase64: String!): ImageTextResponse

    createPost(urlImage: String, title: String!, content: String!, author: String!): PostResponse
    updatePost(_id: ID!, urlImage: String, title: String, content: String, author: String): PostResponse
    deletePost(_id: ID!): DeletePostResponse
}
